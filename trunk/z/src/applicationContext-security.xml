<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	<global-method-security pre-post-annotations="enabled">
		<!--
			AspectJ pointcut expression that locates our "post" method and
			applies security that way <protect-pointcut expression="execution(*
			bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
		-->
	</global-method-security>

	<http use-expressions="true">


		<intercept-url pattern="/*/add.d" access="isAuthenticated()" />
		<intercept-url pattern="/*/save.d" access="isAuthenticated()" />

		<intercept-url pattern="/**" access="permitAll" />

		<form-login login-page="/account/login.jsp"
		authentication-success-handler-ref="authenticationDispatcher"
		authentication-failure-url="/account/login.jsp?error=bad"
		/>
		<!--		authentication-success-handler-ref="authenticationDispatcher"-->
<!--		default-target-url="/"-->
		<logout invalidate-session="true"
			logout-success-url="/" />
		<session-management>
			<concurrency-control max-sessions="2"
				expired-url="/"/>
		</session-management>
	</http>

	<beans:bean id="authenticationDispatcher"
		class="com.evan.zj.service.MyAuthenticationSuccessHandler">
		<beans:property name="userDao">
			<beans:ref bean="userDao"/>
		</beans:property>  
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<!--			<password-encoder hash="md5" />-->
			<jdbc-user-service data-source-ref="dataSource"
					users-by-username-query="SELECT name AS username, PASSWORD AS password, enable AS enabled FROM t_user WHERE name = ?"
				authorities-by-username-query="SELECT u.name AS username,r.name AS authority
                                             FROM t_user u
                                             JOIN t_user_role ur
                                               ON u.tid=ur.userid
                                             JOIN t_role r
                                               ON r.tid=ur.roleid
                                            WHERE u.name=?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>
